# this is an example of the SMC API
# as a demonstration of an API spec in YAML
swagger: '2.0'

################################################################################
#                              API Information                                 #
################################################################################
info:
  title: Gamification
  description: API REST
  version: "1.0.0"
# the domain of the service
host: amt.hostname
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
  
################################################################################
#                                           Paths                              #
################################################################################
paths:
  /badges:
    get:
      summary: Get all the badges
      description: |
        The badge endpoint returns informations about all the *Badges*. 
      tags:
        - Badges
      responses:
        200:
          description: OK
          schema:
            type: object
            description: List of all the Badges
            properties:
              data:
                type: array
                items:
                  allOf:
                    - $ref: '#/definitions/Badge'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add a Badge
      description: |
        The Badge endpoint to add a new Badge.
      parameters:
        - name: name
          in: query
          description: Name of the badge
          required: true
          type: string
          format: string
        - name: image
          in: query
          description: Path to the image
          required: true
          type: string
          format: string
      tags:
        - Badges
      responses:
        201:
          description: Badge has been successfully created
          schema:
            $ref: '#/definitions/Badge'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /badges/{badge-id}:
    parameters:
      - $ref: '#/parameters/badge-id'
    get:
      tags:
        - Badges
      summary: Get a badge
      description: Get basic information about a badge.
      responses:
        200:
          description: The badge object
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/Badge'
    put:
      summary: Update a Badge
      description: |
        The Badge endpoint to update a Badge.
      parameters:
        - name: name
          in: query
          description: Name of the badge
          required: false
          type: string
          format: string
          
        - name: image
          in: query
          description: Path to the image
          required: false
          type: string
          format: string
      tags:
        - Badges
      responses:
        204:
          description: The badge has been updated
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a Badge
      description: |
        The Badge endpoint to delete a Badge.
      tags:
        - Badges
      responses:
        204:
          description: The badge has been deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
                
  /scalepoints:
    get:
      summary: Get all the scale points
      description: |
        The scale point endpoint returns informations about all the *Scale Points*. 
      tags:
        - Scale Points
      responses:
        200:
          description: OK
          schema:
            type: object
            description: List of all the Scale Points
            properties:
              data:
                type: array
                items:
                  allOf:
                    - $ref: '#/definitions/ScalePoint'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add a Scale point
      description: |
        The scale points endpoint to add a new scale point.
      parameters:
        - name: name
          in: query
          description: Name of the scale point
          required: true
          type: string
          format: string
      tags:
        - Scale Points
      responses:
        201:
          description: Scale points has been successfully created
          schema:
            $ref: '#/definitions/ScalePoint'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /scalepoint/{sp-id}:
    parameters:
      - $ref: '#/parameters/sp-id'
    get:
      tags:
        - Scale Points
      summary: Get a scale point
      description: Get basic information about a scale point.
      responses:
        200:
          description: The scale point object
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ScalePoint'
    put:
      summary: Update a Badge
      description: |
        The scale point endpoint to update a scale point.
      parameters:
        - name: name
          in: query
          description: Name of the scale point
          required: true
          type: string
          format: string
      tags:
        - Scale Points
      responses:
        204:
          description: The scale point has been updated
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a Scale point
      description: |
        The Scale point endpoint to delete a Scale point.
      tags:
        - Scale Points
      responses:
        204:
          description: The scale point has been deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /events:
    post:
      tags:
        - Events
      summary: Post events
      description: add an event
      responses:
        201:
          description: event has been successfully created
          schema:
            $ref: '#/definitions/Event'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

################################################################################
#                                   Parameters                                 #
################################################################################
parameters:
  badge-id:
    name: badge-id
    in: path
    description: The badge identifier number
    type: number
    required: true
    
  sp-id:
    name: sp-id
    in: path
    description: The scale point identifier number
    type: number
    required: true

################################################################################
#                                 Definitions                                  #
################################################################################

definitions:
  Badge:
    type: object
    properties:
      id:
        type: number
        description: Unique identifier representing a specific badge
      name:
        type: string
        description: name of badge
      image:
        type: string
        description: path of the image
        
  ScalePoint:
    type: object
    properties:
      id:
        type: number
        description: Unique identifier representing a specific scale point
      name:
        type: string
        description: name of scale point
  
  Event:
    type: object
    properties:
      id:
        type: number
        description: Unique identifier representing a specific badge
      type:
        type: string
        description: type of event
      actor:
        type: object
        description: User who triggers the event
      payload:
        type: object
        description: Informations of the event
        #look a real payload : https://api.github.com/users/Tonidias/events
      createDate:
        type: string
        format: date-time
        description: date of the creation
      
        
        
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
